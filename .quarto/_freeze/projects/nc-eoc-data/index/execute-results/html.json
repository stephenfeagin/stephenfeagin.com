{
  "hash": "6b53c56e25998444607b0e40bca0635a",
  "result": {
    "markdown": "---\nauthor: Stephen Feagin\ndate: '2022-10-03'\ndraft: false\ndescription: Does NC's standardized English test predict performance on the ACT and SAT?\ncategories:\n  - r\n  - education\n  - data cleaning\n  - tidyverse\ntitle: Correlating NC state examination with ACT/SAT performance\nimage: \"featured.jpg\"\n---\n\n\n\n\n# Introduction\n\nMy first job out of graduate school was at the [Connecticut RISE Network](https://ctrise.org), an incredible non-profit organization focused on improving outcomes for high school students in Connecticut. I'm still deeply passionate about education, and that of course spills over into a passion for education data. So in looking for a portfolio project, my first inclination was to do an analysis of open education data.\n\nI have decided to take a look at North Carolina, my home state and a place that still holds special meaning for me. Luckily for me, the North Carolina Department of Public Instruction (NCDPI) has a good deal of openly available datasets to work with. They're somewhat scattered and perhaps not as easy to navigate as one might like, but it's great to have access to high quality, relevant data. In exploring what datasets were available, I settled on a simple question to investigate.\n\nThis project is written in R markdown and is fully reproducible using data files that I list below. My goal is to present the methodical process of the analysis, rather than putting forward a piece of data journalism reporting on the findings.\n\n# Question\n\nDoes performance on the North Carolina End of Course (EOC) English II exam predict performance on the ACT and SAT English sections?\n\nThis analysis covers only English because of data problems with the mathematics EOCs. There are three math EOCs, and some data sets have them specifically labeled \"Math 1\" or similar, some only have \"Math,\" and no years have more than one math exam reported; they're all the same code (all \"Math 1\" or all \"Math,\" not separate entries for different math exams). For this project, I prefer not to make assumptions about which math exam each dataset is dealing with, so I've limited the scope to just English.\n\n# Data\n\nI am using data files from the North Carolina Department of Public Instruction. The main site for these data reports is https://www.dpi.nc.gov/districts-schools/testing-and-school-accountability/school-accountability-and-reporting.\n\n- The EOC data files are spread throughout the Accountability Report Archive at https://www.dpi.nc.gov/districts-schools/testing-and-school-accountability/school-accountability-and-reporting/accountability-data-sets-and-reports/accountability-report-archive\n- The ACT results are in the files at https://www.dpi.nc.gov/districts-schools/testing-and-school-accountability/school-accountability-and-reporting/act-reports\n- The SAT results are in the files at https://www.dpi.nc.gov/districts-schools/testing-and-school-accountability/school-accountability-and-reporting/north-carolina-sat-and-ap-reports\n\n\nI have altered file names for consistency across years, but it is easy to locate the originals on the DPI website.\n\nI will be using data for school years 2016-17 through 2018-2019. Data is available for 2020-2021, but the EOC scores are reported differently -- instead of reporting percents at level 1 and 2, it combines them into a single \"not proficient\" field. I could potentially impute the value 1.5 but I don't think I could justify that move.\n\n## Files Used\n\nBelow are links to the data files that I used for this analysis.\n\n| Year | EOC | ACT | SAT |\n|:-:|:-:|:-:|:-:|\n| 2016-17 | [link](https://www.dpi.nc.gov/documents/americanindianed/reports/2016-17-end-grade-and-end-course-test-results/download) | [link](https://www.dpi.nc.gov/documents/fbs/finance/reporting/2015-16-results-11th-grade-act/download) | [link](https://www.dpi.nc.gov/images/newsroom/2017/2016-2017-nc-public-schools-sat-performance/download)  |\n| 2017-18 | [link](https://www.dpi.nc.gov/documents/americanindianed/reports/data-report/download) | [link](https://www.dpi.nc.gov/documents/americanindianed/reports/2017-18-results-11th-graders-act/download)|[link](https://www.dpi.nc.gov/images/newsroom/2018/2017-18-nc-sat-performance-overview/download)|\n| 2018-19 | [link](https://www.dpi.nc.gov/data-report2019-final/download) |[link](https://www.dpi.nc.gov/documents/fbs/finance/reporting/actresults1819-final/download) | [link](https://www.dpi.nc.gov/documents/fbs/finance/reporting/2019-sat-performance-district-school/download) |\n\n# Method\n\nAs always, start by loading in the necessary libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyr)\n```\n:::\n\n\n## EOC\n\nThere are a couple of challenges with the raw data files. First, they contain data for all schools and school districts, for all tests including the primary school level End of Grade tests and the math and biology EOCs, which are not relevant here. So we need to filter down to only the data that we need. \n\nSecond, the EOC scores are not reported as an average score for a particular school. Rather, they're reported as a distribution: percent of students who scored a 1, percent who scored 2, etc. For very small schools, there are times where there are very few students in a given category. In these instances, the scores are suppressed either entirely by giving the value as \"*\" or by saying \"<5%\" or \">95%\". I have opted to remove the rows with NA values entirely. For the rows with \"<5%\" and \">95%\", I have made the decision to replace those with 2.5 and 97.5, respectively. In some cases this may make the overall percentages not equal exactly 100, but as a rough approximation I think it's reasonable. I do this through a function used across all four years:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfill_in_scores <- function(x) {\n  sapply(x, function(y) {\n    if (y == \"<5\") {\n    return(2.5)\n  } else if (y == \">95\") {\n    return(97.5)\n  } else {\n    return(y)\n  }\n  })\n}\n```\n:::\n\n\n\nAfter scrubbing those values, I then collapse the distribution into a single mean:\n\n$$\\text{E}[score] = \\sum_{i=1}^{5} p_{i}i$$\nwhere $i$ is the score, 1 through 5, and $p_i$ is the proportion of students attaining that score.\n\nAfter that, it's a simple matter of adding a year indicator in each individual file and selecting out only the relevant columns.\n\nThis process is repeated for all four years. I go through step-by-step for the 2016-17 file, then consolidate the code into a single pipeline for the remaining three.\n\n### 2016-17\n\nRead in file:\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- read_excel(\n  \"2016-17 School Assessment and Other Indicator Data.xlsx\", \n  skip = 7,\n  col_names = c(\n    \"district_name\",\n    \"school_code\",\n    \"school_name\",\n    \"sbe_district\",\n    \"subject\",\n    \"percent_level_1\",\n    \"percent_level_2\",\n    \"percent_level_3\", \n    \"percent_level_4\",\n    \"percent_level_5\",\n    \"percent_ccr\",\n    \"percent_glp\"\n    ),\n  na = \"*\")\n```\n:::\n\n\nFilter to include only EOC English scores:\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- filter(eoc_1617, subject == \"EOC English 2\")\n```\n:::\n\n\nSchool district codes are all three digits, and the state overall code is \"NC.\" Filter to exclude school districts and the state level, leaving only individual schools:\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- filter(eoc_1617, nchar(school_code) > 3)\n```\n:::\n\n\nDrop records with NA values and scrub the \"<5%\" and \">95%\" values:\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- eoc_1617 %>% \n  filter(!is.na(percent_level_1),\n         !is.na(percent_level_2),\n         !is.na(percent_level_3),\n         !is.na(percent_level_4),\n         !is.na(percent_level_5)) %>% \n  mutate(percent_level_1 = fill_in_scores(percent_level_1),\n         percent_level_2 = fill_in_scores(percent_level_2),\n         percent_level_3 = fill_in_scores(percent_level_3),\n         percent_level_4 = fill_in_scores(percent_level_4),\n         percent_level_5 = fill_in_scores(percent_level_5),)\n```\n:::\n\n\nCollapse the distribution of scores into a single weighted average:\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- eoc_1617 %>% \n  mutate(\n    mean_score = (as.numeric(percent_level_1) * 1 +\n                    as.numeric(percent_level_2) * 2 +\n                    as.numeric(percent_level_3) * 3 +\n                    as.numeric(percent_level_4) * 4 +\n                    as.numeric(percent_level_5) * 5) / 100\n  )\n```\n:::\n\n\nSelect only the relevant columns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- eoc_1617 %>% \n  select(school_code, school_name, eoc_english = mean_score)\n```\n:::\n\n\nAdd a field for year, using the ending calendar year of the academic year:\n\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1617 <- mutate(eoc_1617, year = 2017)\n```\n:::\n\n\n### 2017-18\n\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1718 <- read_excel(\"2017-18 School Assessment and Other Indicator Data.xlsx\",\n                   sheet = \"EOG and EOC\",\n                   skip = 3,\n                   col_names = c(\n                     \"district_name\",\n                     \"school_code\",\n                     \"school_name\",\n                     \"state_board_region\",\n                     \"grade_span\",\n                     \"subgroup\",\n                     \"subject\",\n                     \"percent_level_1\",\n                     \"percent_level_2\",\n                     \"percent_level_3\",\n                     \"percent_level_4\",\n                     \"percent_level_5\",\n                     \"percent_glp\",\n                     \"percent_ccr\"\n                   )) %>% \n  filter(subject == \"English II\",\n         nchar(school_code) > 3,\n         subgroup == \"All Students\") %>% \n  mutate(percent_level_1 = fill_in_scores(percent_level_1),\n         percent_level_2 = fill_in_scores(percent_level_2),\n         percent_level_3 = fill_in_scores(percent_level_3),\n         percent_level_4 = fill_in_scores(percent_level_4),\n         percent_level_5 = fill_in_scores(percent_level_5)) %>% \n  mutate(mean_score = (as.numeric(percent_level_1) * 1 +\n                         as.numeric(percent_level_2) * 2 +\n                         as.numeric(percent_level_3) * 3 +\n                         as.numeric(percent_level_4) * 4 +\n                         as.numeric(percent_level_5) * 5) / 100,\n         year = 2018) %>% \n  select(year, school_code, school_name, eoc_english = mean_score)\n```\n:::\n\n\n### 2018-2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\neoc_1819 <- read_excel(\n  \"2018-19 School Assessment and Other Indicator Data.xlsx\",\n  sheet = \"EOG and EOC (Reading & Science)\",\n  skip = 2,\n  col_names = c(\n    \"district_name\",\n    \"school_code\",\n    \"school_name\",\n    \"state_board_region\",\n    \"grade_span\",\n    \"missed_days\",\n    \"subgroup\",\n    \"subject\",\n    \"percent_level_1\",\n    \"percent_level_2\",\n    \"percent_level_3\",\n    \"percent_level_4\",\n    \"percent_level_5\",\n    \"percent_glp\",\n    \"percent_ccr\"\n    )\n  ) %>% \n  filter(subgroup == \"All Students\",\n         subject == \"English II\",\n         nchar(school_code) > 3) %>% \n  mutate(percent_level_1 = fill_in_scores(percent_level_1),\n         percent_level_2 = fill_in_scores(percent_level_2),\n         percent_level_3 = fill_in_scores(percent_level_3),\n         percent_level_4 = fill_in_scores(percent_level_4),\n         percent_level_5 = fill_in_scores(percent_level_5)) %>% \n  mutate(\n    mean_score = (as.numeric(percent_level_1) * 1 +\n                    as.numeric(percent_level_2) * 2 +\n                    as.numeric(percent_level_3) * 3 +\n                    as.numeric(percent_level_4) * 4 +\n                    as.numeric(percent_level_5) * 5) / 100,\n    year = 2019\n    ) %>% \n  select(year, school_code, school_name, eoc_english = mean_score)\n```\n:::\n\n\n### Combining Datasets\n\nFinally, union the four tables together:\n\n\n::: {.cell}\n\n```{.r .cell-code}\neoc <- union(eoc_1617, eoc_1718) %>% union(eoc_1819)\n```\n:::\n\n\n## ACT\n\nThe main tasks for the ACT data are filtering out district-wide results and NA records, adding a year indicator, and selecting the proper variables. Otherwise, the data is in a pretty friendly format already.\n\n### 2016-17\n\nRead in the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1617 <- read_excel(\n  \"2016-17 ACT Results.xlsx\",\n  skip = 18,\n  col_names = c(\n    \"district_code\",\n    \"school_code\",\n    \"school_name\",\n    \"number_tested\",\n    \"composite_mean\",\n    \"english_mean\",\n    \"met_english_benchmark\",\n    \"math_mean\",\n    \"met_math_benchmark\",\n    \"reading_mean\",\n    \"met_reading_benchmark\",\n    \"science_mean\",\n    \"met_science_benchmark\",\n    \"met_all_four_benchmarks\",\n    \"writing_mean\",\n    \"met_writing_benchmark\",\n    \"met_all_four_plus_writing_benchmarks\"\n  ),\n  na = \"*\"\n)\n```\n:::\n\n\nFilter out district totals, which are indicated by \"----\" in the school code field:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1617 <- filter(act_1617, school_code != \"----\")\n```\n:::\n\n\nFilter out schools with fewer than 10 students tested:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1617 <- filter(act_1617, number_tested >= 10)\n```\n:::\n\n\nConvert relevant score columns to numeric:\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1617 <- act_1617 %>% \n  mutate(\n    english_mean = as.numeric(english_mean),\n    reading_mean = as.numeric(reading_mean),\n    writing_mean = as.numeric(writing_mean)\n  )\n```\n:::\n\n\nAdd year column:\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1617 <- mutate(act_1617, year = 2017)\n```\n:::\n\n\nSelect the relevant columns:\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1617 <- act_1617 %>% \n  select(year, \n         school_code, \n         act_english = english_mean, \n         act_reading = reading_mean, \n         act_writing = writing_mean)\n```\n:::\n\n\n### 2017-18\n\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1718 <- read_excel(\n  \"2017-18 ACT Results.xlsx\",\n  skip = 16,\n  col_names = c(\n    \"district_code\",\n    \"school_code\",\n    \"school_name\",\n    \"number_tested\",\n    \"composite_mean\",\n    \"english_mean\",\n    \"met_english_benchmark\",\n    \"math_mean\",\n    \"met_math_benchmark\",\n    \"reading_mean\",\n    \"met_reading_benchmark\",\n    \"science_mean\",\n    \"met_science_benchmark\",\n    \"met_all_four_benchmarks\",\n    \"writing_mean\",\n    \"met_writing_benchmark\",\n    \"met_all_four_plus_writing_benchmarks\"\n  ),\n  na = \"*\"\n) %>% \n  filter(school_code != \"----\",\n         number_tested >= 10) %>% \n  mutate(\n    english_mean = as.numeric(english_mean),\n    reading_mean = as.numeric(reading_mean),\n    writing_mean = as.numeric(writing_mean),\n    year = 2018) %>% \n  select(year, \n         school_code, \n         act_english = english_mean, \n         act_reading = reading_mean, \n         act_writing = writing_mean)\n```\n:::\n\n\n\n### 2018-19\n\n\n::: {.cell}\n\n```{.r .cell-code}\nact_1819 <- read_excel(\n  \"2018-19 ACT Results.xlsx\",\n  skip = 16,\n  col_names = c(\n    \"district_code\",\n    \"school_code\",\n    \"school_name\",\n    \"number_tested\",\n    \"composite_mean\",\n    \"english_mean\",\n    \"met_english_benchmark\",\n    \"math_mean\",\n    \"met_math_benchmark\",\n    \"reading_mean\",\n    \"met_reading_benchmark\",\n    \"science_mean\",\n    \"met_science_benchmark\",\n    \"met_all_four_benchmarks\",\n    \"writing_mean\",\n    \"met_writing_benchmark\",\n    \"met_all_four_plus_writing_benchmarks\"\n  ),\n  na = \"*\"\n) %>% \n  filter(school_code != \"----\",\n         number_tested >= 10) %>% \n  mutate(\n    english_mean = as.numeric(english_mean),\n    reading_mean = as.numeric(reading_mean),\n    writing_mean = as.numeric(writing_mean),\n    year = 2019) %>% \n  select(year, school_code, \n         act_english = english_mean, \n         act_reading = reading_mean, \n         act_writing = writing_mean)\n```\n:::\n\n\n\n### Combining\n\n\n::: {.cell}\n\n```{.r .cell-code}\nact <- union(act_1617, act_1718) %>% union(act_1819)\n```\n:::\n\n\n## SAT\n\nThe SAT files are not too messy, but we still have to skip rows and add in dummy columns to accommodate how the Excel file is styled.\n\n### 2017\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_17 <- read_excel(\n  \"2017 SAT Performance by District and School.xlsx\",\n  skip = 6,\n  col_names = c(\n    \"district_code\",\n    \"school_code\",\n    \"school_name\",\n    \"d\",  # d and e are empty columns in the original\n    \"e\",\n    \"number_tested\",\n    \"percent_tested\",\n    \"total_score\",\n    \"erw_score\",\n    \"math_score\"\n  )\n)\n```\n:::\n\n\nRemove the district total records -- the district name is listed in the school code field and the school name field is empty, so it's easy to remove those observations where school name is NA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_17 <- filter(sat_17, !is.na(school_name))\n```\n:::\n\n\nAlso filter out schools with fewer than 10 students tested:\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_17 <- filter(sat_17, number_tested != \"<10\")\n```\n:::\n\n\nConvert the ERW score to numeric:\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_17 <- mutate(sat_17, erw_score = as.numeric(erw_score))\n```\n:::\n\n\nAdd a field for year:\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_17 <- mutate(sat_17, year = 2017)\n```\n:::\n\n\nSelect only the desired columns:\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_17 <- select(sat_17, year, school_name, sat_erw = erw_score)\n```\n:::\n\n\n### 2018\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_18 <- read_excel(\n  \"2018 SAT Performance by District and School.xlsx\",\n  skip = 6,\n  col_names = c(\n    \"district_code\",\n    \"school_code\",\n    \"school_name\",\n    \"d\",\n    \"e\",\n    \"number_tested\",\n    \"percent_tested\",\n    \"total_score\",\n    \"erw_score\",\n    \"math_score\"\n    )\n  ) %>% \n  filter(!is.na(school_name),\n         number_tested != \"<10\") %>% \n  mutate(erw_score = as.numeric(erw_score),\n         year = 2018) %>% \n  select(year, school_name, sat_erw = erw_score)\n```\n:::\n\n\n### 2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsat_19 <- read_excel(\n  \"2019 SAT Performance by District and School.xlsx\",\n  skip = 6,\n  col_names = c(\n    \"district_code\",\n    \"school_code\",\n    \"school_name\",\n    \"d\",\n    \"e\",\n    \"number_tested\",\n    \"percent_tested\",\n    \"total_score\",\n    \"erw_score\",\n    \"math_score\"\n    )\n  ) %>% \n  filter(!is.na(school_name),\n         number_tested != \"<10\") %>% \n  mutate(erw_score = as.numeric(erw_score),\n         year = 2019) %>% \n  select(year, school_name, sat_erw = erw_score)\n```\n:::\n\n\n### Combining\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsat <- union(sat_17, sat_18) %>% union(sat_19)\n```\n:::\n\n\n## Joining Datasets\n\nThe SAT files don't have school code, only school name. The ACT files have school code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- left_join(eoc, sat, by = c(\"school_name\", \"year\")) %>% \n  left_join(act, by = c(\"school_code\", \"year\"))\n```\n:::\n\n\n# Descriptive Statistics\n\n## Scores Over Time\n\nBelow, I present box plots of scores for the different tests separated by year. These show considerable consistency of scores over time.\n\n### EOC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = as.factor(year), y = eoc_english)) +\n  geom_boxplot() + \n  labs(x = \"Year\", y = \"EOC Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n### ACT English\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = as.factor(year), y = act_english)) +\n  geom_boxplot() +\n  labs(x = \"Year\", y = \"ACT English Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n### ACT Reading\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = as.factor(year), y = act_reading)) +\n  geom_boxplot() +\n  labs(x = \"Year\", y = \"ACT Reading Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n### ACT Writing\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = as.factor(year), y = act_writing)) +\n  geom_boxplot() +\n  labs(x = \"Year\", y = \"ACT Writing Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n### SAT\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = as.factor(year), y = sat_erw)) +\n  geom_boxplot() +\n  labs(x = \"Year\", y = \"SAT ERW Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n## Correlations\n\nI now look at the main focus of the analysis: the correlation between EOC scores and ACT/SAT scores. We can see that with the possible exception of the SAT correlation, the relationships between EOC scores and the national tests are well approximated by a simple linear model. It looks like the slope of the SAT ~ EOC line would be steeper if not for some high-leverage data points with higher EOC scores and lower SAT scores.\n\nConfirming the impression that scores have been consistent over time, we see through regression analysis that the year variable is not statistically significant in any of the models.\n\n### EOC and SAT\n\n#### Regression\n\n\n\n```{.r .cell-code}\neoc_sat_model <- lm(sat_erw ~ eoc_english + year, data = dataset)\n```\n\n\n| **Variable** | **Coefficient** | **Standard Error** |\n|-:|:-:|:-:|\n| EOC | 64.0473544 | 1.7957044 | \n| Year | 1.7458006 | 1.0661245 |\n| Coefficient | -3175.6908214 | 2151.5119343 |\n\nFor a one point increase on the EOC, we can expect to add an average of 64.05 points on the SAT ERW section.\n\n#### Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = eoc_english, y = sat_erw)) +\n  geom_point(alpha = 0.25) + \n  geom_smooth(method = \"lm\", formula = y ~ x) +\n  labs(x = \"EOC English Score\", y = \"SAT ERW Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n### EOC and ACT English\n\n#### Regression\n\n\n\n```{.r .cell-code}\neoc_act_english_model <- lm(act_english ~ eoc_english + year, data = dataset)\n```\n\n\n| **Variable** | **Coefficient** | **Standard Error** |\n|-:|:-:|:-:|\n| EOC | 4.7707492 | 0.0621818 | \n| Year | -0.2844032 | 0.0444428 |\n| Coefficient | 576.5974144 | 89.6889905 |\n\nFor a one point increase on the EOC, we can expect to add an average of 4.77 points on the ACT English section.\n\n#### Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = eoc_english, y = act_english)) +\n  geom_point(alpha = 0.25) + \n  geom_smooth(method = \"lm\", formula = y ~ x) +\n  labs(x = \"EOC English Score\", y = \"ACT English Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n### EOC and ACT Reading\n\n#### Regression\n\n\n\n```{.r .cell-code}\neoc_act_reading_model <- lm(act_reading ~ eoc_english + year, data = dataset)\n```\n\n\n| **Variable** | **Coefficient** | **Standard Error** |\n|-:|:-:|:-:|\n| EOC | 4.7312901 | 0.0577885 | \n| Year | 0.1176989 | 0.0413028 |\n| Coefficient | -232.8635509 | 83.3521659 |\n\nFor a one point increase on the EOC, we can expect to add an average of 4.73 points on the ACT reading section.\n\n#### Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = eoc_english, y = act_reading)) +\n  geom_point(alpha = 0.25) + \n  geom_smooth(method = \"lm\", formula = y ~ x) +\n  labs(x = \"EOC English Score\", y = \"ACT Reading Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n### EOC and ACT Writing\n\n#### Regression\n\n\n\n```{.r .cell-code}\neoc_act_writing_model <- lm(act_writing ~ eoc_english + year, data = dataset)\n```\n\n\n| **Variable** | **Coefficient** | **Standard Error** |\n|-:|:-:|:-:|\n| EOC | 1.282358 | 0.0214718 | \n| Year | 0.0549683 | 0.0152415 |\n| Coefficient | -109.2267805 | 30.7588753 |\n\nFor a one point increase on the EOC, we can expect to add an average of 1.28 points on the ACT writing section.\n\n#### Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = eoc_english, y = act_writing)) +\n  geom_point(alpha = 0.25) + \n  geom_smooth(method = \"lm\", formula = y ~ x) +\n  labs(x = \"EOC English Score\", y = \"ACT Writing Score\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n# Conclusion\n\nIt is very clear both visually and statistically that EOC English scores are highly correlated with the verbal sections in the ACT and SAT. The year the exam was taken does not meaningfully impact the relationship, because scores are remarkably stable over the time period in question.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}